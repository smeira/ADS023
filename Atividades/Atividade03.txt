1. Criar um projeto usando Ionic CLI.

a) Abra o aplicativo VSCode.

b) Instale os plugins Auto Import, Ionic 4 Snippets e Angular Snippets (Version 8).

c) Selecione a pasta ADS023 e abra o terminal pressionando CTRL+'.

d) Crie um novo projeto Ionic chamado Atividade03 usando o template em branco (Dica: ionic start Atividade03 blank). Responda N quando for questionado a participação do projeto nas estatísticas do Angular Team.



2. Executando um projeto usando Ionic CLI

a) Acesse o diretório do projeto criado (Dica: digite cd nome-do-projeto no terminal).

b) Execute o projeto com o comando serve. Foi exibida a página no navegador? 

c) Interrompa a execução do servidor pressionando CTRL+C.

d) Execute novamente o projeto com a opção --lab. Notou alguma diferença? 

e) Interrompa a execução do servidor pressionando CTRL+C.



3. Adicionar componentes Angular ao projeto via Ionic CLI.

a) Execute o projeto com o comando serve.

b) Abra outro terminal no VSCode.

c) Crie uma página com o comando generate. Defina o nome notas para a página.

d) Acesse a URL localhost:8100/notas. Qual foi o resultado?

e) Altere o conteúdo do arquivo notas.page.html para exibir uma lista de notas.

<ion-content>
  <p>Suas notas</p>
  <ion-grid>
    <ion-row>
      <ion-col>Disciplina</ion-col>
      <ion-col>A1</ion-col>
      <ion-col>A2</ion-col>
      <ion-col>A3</ion-col>
      <ion-col>EDAD</ion-col>
      <ion-col>Média</ion-col>
    </ion-row>
  </ion-grid>
</ion-content>

f) Acrescente um elemento ion-row para exibir as notas da disciplina ADS023 - Programação para Dispositivos Móveis.

<ion-row>
  <ion-col>ADS023 - Programação para Dispositivos Móveis</ion-col>
  <ion-col>5,0</ion-col>
  <ion-col>-</ion-col>
  <ion-col>5,0</ion-col>
  <ion-col>0,0</ion-col>
  <ion-col>5,0</ion-col>
</ion-row>

g) Acrescente um elemento ion-row para exibir as notas da disciplina RCT024 - Gerência de Projetos.

<ion-row>
<ion-col>RCT024 - Gerência de Projetos</ion-col>
<ion-col>4,0</ion-col>
<ion-col>6,0</ion-col>
<ion-col>-</ion-col>
<ion-col>10,0</ion-col>
<ion-col>5,0</ion-col>
</ion-row>

h) Altere o arquivo notas.page.ts acrescentando a propriedade titulo do tipo string dentro da classe NotasPage.

titulo: string = 'Suas notas'

i) Substitua o texto Suas notas para exibir o conteúdo do atributo titulo (Dica: usar a interpolação {{ }}).

<p>{{ titulo }}</p>

j) Crie uma interface com o comando generate. Defina o nome notas/nota.model para a interface.

k) Altere o arquivo nota.model.ts acrescentando as propriedades disciplina, a1, a2, a3, edad e media do tipo string. Altere no nome da inferface para Nota.

export interface Nota {

    disciplina: string;
    a1: string;
    a2: string;
    a3: string;
    edad: string;
    media: string;

} 

l) Acrescente na classe NotasPage a propriedade notas do tipo Nota[]. Inicialize o array com as notas das disciplinas.

notas: Nota[] = [
  {
    disciplina: 'ADS023 - Programação para Dispositivos Móveis',
    a1: '5,0',
    a2: '-',
    a3: '5,0',
    edad: '0,0',
    media: '5,0'
  },

  {
    disciplina: 'RCT024 - Gerência de Projetos',
    a1: '4,0',
    a2: '6,0',
    a3: '-',
    edad: '10,0',
    media: '5,0'
  },
];

m) Substitua no arquivo notas.page.html a listagem de notas pela diretiva *ngFor.

<ion-row *ngFor="let nota of notas">
  <ion-col>{{ nota.disciplina }} </ion-col>
  <ion-col>{{ nota.a1 }} </ion-col>
  <ion-col>{{ nota.a2 }} </ion-col>
  <ion-col>{{ nota.a3 }} </ion-col>
  <ion-col>{{ nota.edad }} </ion-col>
  <ion-col>{{ nota.media }} </ion-col>
</ion-row>

n) Crie um servido com o comando generate. Defina o nome notas/notas para o serviço.

o) Mova a propriedade notas da classe NotasPage para a classe NotasService no arquivo notas.service.ts. Torne essa propriedade privada.

p) Defina o método getNotas() na classe NotasService. Faça esse método retornar uma cópia da propriedade notas.

getNotas() {
  return [...this.notas];
}

q) Acrescente no construtor da classe NotasPage um parâmetro privado notasService do tipo NotasService.

r) Acrescente a propriedade notas do tipo Nota[]. Faça o método ngOnInit() inicializar essa propriedade como resultado do método getNotas() de notasService.

this.notas = this.notasSevice.getNotas();

s) Efetive o commit acionando a opção Commit All. Não esqueça de por um comentário ao commit (Ex.: Criando o projeto Atividade03).

t) Envie os arquivos versionados para o git remoto acionando a opção Push. Informe usuário/senha e acione a opção Sign in.



4. Adicionar uma plataforma ao projeto Ionic

a) Adicione a plataforma android com o comando capacitor (Dica: ioni capacitor add). Qual foi o resultado?

b) Gere um pacote de distribuição do projeto Ionic para ser implantado em um servidor Web (Dica: ionic build).

c) Tente adicionar a plataforma android novamente. Qual foi o resutlado?

d) Abra o aplicativo Android Studio.

e) Escolha a opção Open Project. Selecione a pasta android gerada pelo capacitor.

f) Verifique se o Gradle executou o build do projeto. Caso contrário, acione o menu Build->Make Project.

g) Ative o modo de depuração USB na Opções do desenvolvedor do aparelho. Essa opção fica oculta por padrão e para ser exibida deve-se tocar 7x no Número de compilação nas Configurações->Sobre->Informações do Software.

h) Conecte um dispositivo a sua estação de trabalho via USB. Aceite a permissão solicitada pelo dispositivo.

i) Inicie a execução do projeto. Verifique se o seu dispositivo apareceu na janela Select Deployment Target.

j) Selecione o disposito e clique em Ok. 

k) Aceite a instalação do Android SDK corresponte ao dispositivo. O app foi instalado no dispositivo?

l) Interrompa a execução do projeto e remova o app do dispositivo.
